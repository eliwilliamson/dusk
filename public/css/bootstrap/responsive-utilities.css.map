{"version":3,"sources":["assets/css/bootstrap/responsive-utilities.styl","node_modules/axis/node_modules/nib/lib/nib/flex.styl"],"names":[],"mappings":"AAsCA,AAAE;AACC;AACC;AACD;AAIH;AAAY;AACa;AACa;ECzBlC,SAAS,gBAAT;;AD8BI;AAAA;IC9BJ,SAAS,iBAAT;;ADdH;ICcG,SAAS,MAAT;;ADZH;ICYG,SAAS,qBAAT;;ADVH;AAAI;ICUD,SAAS,sBAAT;;;ADkCI;AAAA;IClCJ,SAAS,iBAAT;;ADdH;ICcG,SAAS,MAAT;;ADZH;ICYG,SAAS,qBAAT;;ADVH;AAAI;ICUD,SAAS,sBAAT;;;ADsCI;AAAA;ICtCJ,SAAS,iBAAT;;ADdH;ICcG,SAAS,MAAT;;ADZH;ICYG,SAAS,qBAAT;;ADVH;AAAI;ICUD,SAAS,sBAAT;;;AD0CI;AAAA;IC1CJ,SAAS,iBAAT;;ADdH;ICcG,SAAS,MAAT;;ADZH;ICYG,SAAS,qBAAT;;ADVH;AAAI;ICUD,SAAS,sBAAT;;;AD8CI;AAAA;IC9CJ,SAAS,gBAAT;;;ADkDI;AAAA;IClDJ,SAAS,gBAAT;;;ADsDI;AAAA;ICtDJ,SAAS,gBAAT;;;AD0DI;AAAA;IC1DJ,SAAS,gBAAT;;;ADiEJ;ECjEI,SAAS,gBAAT;;ADoEI;AAAA;ICpEJ,SAAS,iBAAT;;ADdH;ICcG,SAAS,MAAT;;ADZH;ICYG,SAAS,qBAAT;;ADVH;AAAI;ICUD,SAAS,sBAAT;;;ADwEI;AAAA;ICxEJ,SAAS,gBAAT","file":"responsive-utilities.css","sourcesContent":["//\n// Responsive: Utility classes\n// --------------------------------------------------\n\n// Functions\n// --------------------------------------------------\nresponsive-visibility()\n\tdisplay: block !important\n\ttable&\n\t\tdisplay: table\n\ttr&\n\t\tdisplay: table-row !important\n\tth&,\n\ttd&\n\t\tdisplay: table-cell !important\n\nresponsive-invisibility()\n\tdisplay: none !important\n\n\n// Styles\n// --------------------------------------------------\n\n// IE10 in Windows (Phone) 8\n//\n// Support for responsive views via media queries is kind of borked in IE10, for\n// Surface/desktop in split view and for Windows Phone 8. This particular fix\n// must be accompanied by a snippet of JavaScript to sniff the user agent and\n// apply some conditional CSS to *only* the Surface/desktop Windows 8. Look at\n// our Getting Started page for more information on this bug.\n//\n// For more information, see the following:\n//\n// Issue: https://github.com/twbs/bootstrap/issues/10497\n// Docs: http://getbootstrap.com/getting-started/#browsers\n// Source: http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/\n\n//TODO: Uggo in stylus\n@css {\n\t@-ms-viewport {\n\t\twidth: device-width;\n\t}\n}\n\n// Visibility utilities\n.visible-xs,\n.visible-sm,\n.visible-md,\n.visible-lg\n\tresponsive-invisibility()\n\n.visible-xs\n\t@media $screen-xs-media-max\n\t\tresponsive-visibility()\n\n.visible-sm\n\t@media $screen-sm-media-min-and-max\n\t\tresponsive-visibility()\n\n.visible-md\n\t@media $screen-md-media-min-and-max\n\t\tresponsive-visibility()\n\n.visible-lg\n\t@media $screen-lg-media\n\t\tresponsive-visibility()\n\n.hidden-xs\n\t@media $screen-xs-media-max\n\t\tresponsive-invisibility()\n\n.hidden-sm\n\t@media $screen-sm-media-min-and-max\n\t\tresponsive-invisibility()\n\n.hidden-md\n\t@media $screen-md-media-min-and-max\n\t\tresponsive-invisibility()\n\n.hidden-lg\n\t@media $screen-lg-media\n\t\tresponsive-invisibility()\n\n\n// Print utilities\n//\n// Media queries are placed on the inside to be mixin-friendly.\n.visible-print\n\tresponsive-invisibility()\n\n\t@media print\n\t\tresponsive-visibility()\n\n.hidden-print\n\t@media print\n\t\tresponsive-invisibility()\n\n","/*\n * Vendor \"display: flex\" support with fallback to obsolete versions.\n */\n\nflex-version ?= box flex\n\n//\n// 1. Display values\n//    - http://www.w3.org/TR/css3-flexbox/#flex-containers\n//\ndisplay(type, args...)\n  if flex == type || inline-flex == type\n    if box in flex-version\n      if flex == type\n        display: -ms-flexbox args\n        display: vendor-value(box args, only: moz webkit)\n      else\n        display: -ms-inline-flexbox args\n        display: vendor-value(inline-box args, only: moz webkit)\n    if flex in flex-version\n      display: vendor-value(arguments, only: webkit official) // overwrites old webkit\n  else\n    display: arguments\n\n/*\n * New syntax for browsers like Google Chrome.\n * Plus a translation to the old syntax, if possible.\n */\n\n\n//\n// 5. Ordering and Orientation\n//    - http://www.w3.org/TR/css3-flexbox/#ordering-and-orientation\n//\n-flex-obsolete-direction(direction)\n  if box in flex-version\n    if row-reverse == direction || column-reverse == direction\n      vendor('box-direction', reverse, ignore: ms official)\n\n    if row == direction || row-reverse == direction\n      vendor('box-orient', horizontal, ignore: ms official)\n    else if column == direction || column-reverse == direction\n      vendor('box-orient', vertical, ignore: ms official)\n\n-flex-obsolete-wrap(value)\n  if box in flex-version\n    // WARN: wrap-reverse does not have a box equivalent. This will render in different manners\n    //    on box vs. flex values.\n    if 'wrap' == value || wrap-reverse == value\n      vendor('box-lines', multiple, ignore: ms official)\n    else if nowrap == value\n      vendor('box-lines', single, ignore: ms official)\n\nflex-direction(direction)\n  // obsolete\n  -flex-obsolete-direction(direction)\n\n  // new\n  if flex in flex-version\n    vendor('flex-direction', arguments, only: webkit ms official)\n\nflex-wrap(value)\n  // obsolete\n  -flex-obsolete-wrap(value)\n\n  if flex in flex-version\n    vendor('flex-wrap', arguments, only: webkit ms official)\n\nflex-flow()\n  // obsolete\n  -flex-obsolete-direction(arguments[0])\n  -flex-obsolete-direction(arguments[1])\n  -flex-obsolete-wrap(arguments[0])\n  -flex-obsolete-wrap(arguments[1])\n\n  // new\n  if flex in flex-version\n    vendor('flex-flow', arguments, only: webkit ms official)\n\n\norder()\n  // obsolete\n  if box in flex-version\n    vendor('box-ordinal-group', arguments, ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-order', arguments, only: ms)\n    vendor('order', arguments, only: webkit official)\n\n\n//\n// 7. Flexibility\n//    - http://www.w3.org/TR/css3-flexbox/#flexibility\n//\nflex-grow(growth)\n  // obsolete\n  if box in flex-version\n    vendor('box-flex', growth)\n\n  // new\n  if flex in flex-version\n    vendor('flex-grow', arguments, only: webkit official)\n\nflex-basis()\n  if flex in flex-version\n    vendor('flex-basis', arguments, only: webkit official)\n\nflex-shrink()\n  if flex in flex-version\n    vendor('flex-shrink', arguments, only: webkit official)\n\nflex(growth)\n\n  // obsolete\n  if box in flex-version\n    shrink = 1\n\n    if none == growth || initial == growth\n      // Well known values\n      shrink = 0 if none == growth\n      growth = 0\n    else if is-width(growth) == true\n      // Basis is defined as the first parameter\n      growth = arguments[1] || 0\n      shrink = arguments[2] if 3 <= length(arguments)\n    else if arguments[1] && is-width(arguments[1]) == false\n      // Growth is first and shrink is second\n      shrink = arguments[1]\n\n    // Since we can't make the distinction between growing and shrinking in the box model, take\n    // the one that provides the most flexibility.\n    vendor('box-flex', max(growth, shrink), ignore: ms)\n\n  // new\n  if flex in flex-version\n    vendor('flex', arguments, only: webkit ms official)\n\n\n// converts the justification alignment\n-convert-justify(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else if space-around == align\n    return distribute\n  else if space-between == align\n    return justify\n  else\n    return align\n\n//\n// 8. Alignment\n//    - http://www.w3.org/TR/css3-flexbox/#alignment\n//\njustify-content(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-pack', -convert-justify(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-pack', -convert-justify(align), only: ms)\n    vendor('justify-content', align, only: webkit official)\n\nalign-content(align)\n  // WARN: Obsolete spec does not allow for adjustment here\n  if flex in flex-version\n    vendor('flex-line-pack', -convert-justify(align), only: ms)\n    vendor('align-content', align, only: webkit official)\n\n// converts alignment from 'flex' to normal value\n-convert-alignment(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else\n    return align\n\nalign-items(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-align', -convert-alignment(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-align', -convert-alignment(align), only: ms)\n    vendor('align-items', arguments, only: webkit official)\n\nalign-self(align)\n  // WARN: Obsolete spec does not allow for overriding alignment on individual items.\n  if flex in flex-version\n    vendor('align-self', align, only: webkit official)\n    vendor('flex-item-align', -convert-alignment(align), only: ms)\n"]}